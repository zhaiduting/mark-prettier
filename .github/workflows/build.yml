name: Build Mark Prettier Plugin

on:
    push:
        tags:
            - '*'   # 任意 tag push 都触发

permissions:
    contents: write  # 发布 Release 需要写权限

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            # 1. Checkout 仓库
            -   name: Checkout repository
                uses: actions/checkout@v4

            # 2. 设置 Node.js (使用 LTS)
            -   name: Setup Node.js
                uses: actions/setup-node@v4
                with:
                    node-version: lts/*

            # 3. 缓存依赖（加快构建）
            -   name: Cache Node.js modules
                uses: actions/cache@v3
                with:
                    path: ~/.npm
                    key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                    restore-keys: |
                        ${{ runner.os }}-node-

            # 4. 安装依赖
            -   name: Install dependencies
                run: npm ci

            # 5. 获取 tag 并补全版本号
            -   name: Get version from tag
                id: get_version
                run: |
                    TAG_NAME="${GITHUB_REF#refs/tags/}"
                    VERSION="${TAG_NAME#v}"
                    
                    IFS='.' read -ra PARTS <<< "$VERSION"
                    if [ ${#PARTS[@]} -eq 1 ]; then
                      VERSION="${PARTS[0]}.0.0"
                    elif [ ${#PARTS[@]} -eq 2 ]; then
                      VERSION="${PARTS[0]}.${PARTS[1]}.0"
                    fi
                    
                    echo "version=$VERSION" >> $GITHUB_ENV
                    echo "Release version: $VERSION"

            # 6. 更新 manifest.json 的 version
            -   name: Update manifest.json version
                run: |
                    jq --arg ver "${{ env.version }}" '.version = $ver' manifest.json > manifest.tmp.json
                    mv manifest.tmp.json manifest.json
                shell: bash

            # （可选）7. 同步更新 package.json 版本号
            -   name: Update package.json version
                run: |
                    jq --arg ver "${{ env.version }}" '.version = $ver' package.json > package.tmp.json
                    mv package.tmp.json package.json
                shell: bash

            # 8. 构建插件（生产模式）
            -   name: Build plugin
                run: npm run build

            # 9. 打包插件文件为 ZIP（固定文件名）
            -   name: Package plugin as zip
                run: |
                    mkdir -p release
                    zip -r release/mark-prettier.zip main.js manifest.json styles.css
                shell: bash

            # 10. 创建 Release 并上传 ZIP 和 manifest.json
            -   name: Create Release and Upload Assets
                uses: softprops/action-gh-release@v1
                with:
                    tag_name: ${{ github.ref_name }}
                    name: Mark Prettier Release ${{ env.version }}
                    generate_release_notes: true
                    draft: false
                    prerelease: false
                    files: |
                        release/mark-prettier.zip
                        manifest.json
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
